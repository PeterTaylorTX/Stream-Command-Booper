<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Brush x:Key="appBackground">#333333</Brush>
    <Brush x:Key="MenuBackground">#464646</Brush>
    <Brush x:Key="ListViewBackground">#044d00</Brush>
    <Brush x:Key="ButtonBackground">#0044ce</Brush>
    <Brush x:Key="ButtonBackground_Hover">#1a57d3</Brush>
    <Brush x:Key="ButtonBackground_Inactive">#808080</Brush>
    <Brush x:Key="ButtonForeground">White</Brush>
    <Brush x:Key="Foreground">White</Brush>
    <Brush x:Key="Colour_ComboActive">#3399AA</Brush>
    <Brush x:Key="Colour_ComboHover">#33BBBB</Brush>
    <Brush x:Key="Colour_ComboText">#bbbbbb</Brush>
    <Brush x:Key="Colour_ComboBackground">#C3C3C3</Brush>
    <Brush x:Key="Colour_ComboBorder">#000000</Brush>
    <Brush x:Key="Colour_ComboArrow">Orange</Brush>


    <Style TargetType="Window">
        <Setter Property="Background" Value="{StaticResource appBackground}"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
    </Style>

    <Style TargetType="Label" x:Key="GroupTitle">
        <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <Style TargetType="Label" x:Key="Title" >
        <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
        <Setter Property="FontSize" Value="18"/>
    </Style>


    <Style TargetType="TextBlock" x:Key="Direct">
        <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
    </Style>

    <Style TargetType="Border" x:Key="Group">
        <Setter Property="BorderBrush" Value="{StaticResource Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="25"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="Black" BorderThickness="1" CornerRadius="5" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonBackground_Hover}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource ButtonBackground_Inactive}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="5*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="5" Background="{DynamicResource Colour_ComboActive}" BorderBrush="{DynamicResource Colour_ComboBorder}" BorderThickness="1" />
                                        <Border Grid.Column="0" CornerRadius="5,0,0,5"  Margin="1"  Background="{DynamicResource Colour_ComboBackground}"  BorderBrush="{DynamicResource Colour_ComboBorder}" BorderThickness="0,0,1,0" />
                                        <Path x:Name="Arrow" Grid.Column="1"  Fill="{DynamicResource Colour_ComboArrow}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Colour_ComboHover}" />
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Colour_ComboHover}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,27,3"  />
                        <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                            <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="#ffffff" />
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

</ResourceDictionary>